{"version":3,"sources":["app.js","define/define.js","history/history.js","logs/logs.js","auth/signin.js","auth/signup.js","auth/userlinks.js","authinterceptor.js","currentuser.js","define.service.js","logs.service.js","sessiontoken.js","users.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(()=>{\r\n\tvar app=angular.module('workoutlog',[\r\n\t\t'ui.router',\r\n\t\t'workoutlog.auth.signin',\r\n\t\t'workoutlog.auth.signup',\r\n\t\t'workoutlog.define',\r\n\t\t'workoutlog.logs']);\r\n\tfunction config($urlRouterProvider){\r\n\t\t$urlRouterProvider.otherwise('/signin');\r\n\t}\r\n\tconfig.$inject=['$urlRouterProvider'];\r\n\tapp.config(config);\r\n\tapp.constant('API_BASE','//localhost:3000/api/');\r\n})();","(()=>{\r\n\tangular.module('workoutlog.define',[\r\n\t\t'ui.router'\r\n\t])\r\n\t.config(defineConfig);\r\n\tfunction defineConfig(stateProvider){\r\n\t\tstateProvider.state('define',{\r\n\t\t\turl:'/define',\r\n\t\t\ttemplateUrl:'/components/define/define.html',\r\n\t\t\tcontroller:DefineController,\r\n\t\t\tcontrollerAs:'ctrl',\r\n\t\t\tbindToController:this,\r\n\t\t\tresolve:[\r\n\t\t\t\t'CurrentUser','$q','$state',\r\n\t\t\t\tfunction(CurrentUser,$q,$state){\r\n\t\t\t\t\tvar deferred=$q.defer();\r\n\t\t\t\t\tif(CurrentUser.isSignedIn())deferred.resolve();\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdeferred.reject();\r\n\t\t\t\t\t\t$state.go('signin');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t}]\r\n\t\t});\r\n\t}\r\n\tdefineConfig.$inject=['$stateProvider'];\r\n\r\n\tfunction DefineController($state,DefineService){\r\n\t\tvar vm=this;\r\n\t\tvm.message=\"Define a workout category here\";\r\n\t\tvm.saved=false;\r\n\t\tvm.definition={};\r\n\t\tvm.save=()=>DefineService.save(vm.definition).then(()=>{vm.saved=true;$state.go('logs');});\r\n\t}\r\n\tDefineController.$inject=['$state','DefineService'];\r\n})();","","(()=>{\r\n\tangular.module('workoutlog.logs',[\r\n\t\t'ui.router'\r\n\t])\r\n\t.config(logsConfig);\r\n\tlogsConfig.$inject=['$stateProvider'];\r\n\tfunction logsConfig($stateProvider) {\r\n\t\t$stateProvider\r\n\t\t\t.state('logs',{\r\n\t\t\t\turl:'/logs',\r\n\t\t\t\ttemplateUrl:'/components/logs/logs.html',\r\n\t\t\t\tcontroller:LogsController,\r\n\t\t\t\tcontrollerAs:'ctrl',\r\n\t\t\t\tbindToController:this,\r\n\t\t\t\tresolve:{\r\n\t\t\t\t\tgetUserDefinitions:[\r\n\t\t\t\t\t\t'DefineService',\r\n\t\t\t\t\t\tDefineService=>DefineService.fetch()\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.state('logs/update',{\r\n\t\t\t\turl:'/logs/:id',\r\n\t\t\t\ttemplateUrl:'/componenets/logs/log-update.html',\r\n\t\t\t\tcontroller:LogsController,\r\n\t\t\t\tcontrollerAs:'ctrl',\r\n\t\t\t\tbindToController:this,\r\n\t\t\t\tresolve:{\r\n\t\t\t\t\tgetSingleLog:($stateParams,LogsService)=>LogsService.fetchOne($stateParams.id),\r\n\t\t\t\t\tgetUserDefinitions:DefineService=>DefineService.fetch()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\tLogsController.$inject=['$state','DefineService','LogsService'];\r\n\tfunction LogsController($state,DefineService,LogsService) {\r\n\t\tvar vm=this;\r\n\t\tvm.saved=false;\r\n\t\tvm.log={};\r\n\t\tvm.userDefinitions=DefineService.getDefinitions();\r\n\t\tvm.updateLog=LogsService.getLog();\r\n\t\tvm.save=()=>LogsService.save(vm.log).then(()=>{\r\n\t\t\tvm.saved=true;\r\n\t\t\t$state.go('history');\r\n\t\t});\r\n\t\tvm.updateSingleLog=()=>{\r\n\t\t\tvar logToUpdate={\r\n\t\t\t\tid:vm.updateLog.id,\r\n\t\t\t\tdesc:vm.updateLog.description,\r\n\t\t\t\tresult:vm.updateLog.result,\r\n\t\t\t\tdef:vm.updateLog.def\r\n\t\t\t}\r\n\t\t\tLogsService.updateLog(logToUpdate).then(()=>$state.go('history'));\r\n\t\t};\r\n\t}\r\n})();","(()=>{\r\n\tangular\r\n\t\t.module('workoutlog.auth.signin',['ui.router'])\r\n\t\t.config(signinConfig);\r\n\tfunction signinConfig(stateProvider) {\r\n\t\tstateProvider\r\n\t\t\t.state('signin',{\r\n\t\t\t\turl:'/signin',\r\n\t\t\t\ttemplateUrl:'/components/auth/signin.html',\r\n\t\t\t\tcontroller:SigninController,\r\n\t\t\t\tcontrollerAs:'ctrl',\r\n\t\t\t\tbindToController:this\r\n\t\t\t});\r\n\t}\r\n\tsigninConfig.$inject=['$stateProvider'];\r\n\tfunction SigninController($state,UsersService){\r\n\t\tvar vm=this;\r\n\t\tvm.user={};\r\n\t\tvm.login=()=>{\r\n\t\t\tUsersService.login(vm.user).then(res=>{\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\t$state.go('define');\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n\tSigninController.$inject=['$state','UsersService'];\t\r\n})();\r\n","(()=>{\r\n\tangular\r\n\t\t.module('workoutlog.auth.signup',['ui.router'])\r\n\t\t.config(signupConfig);\r\n\t\tfunction signupConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t.state('signup',{\r\n\t\t\t\turl:'/signup',\r\n\t\t\t\ttemplateUrl:'/components/auth/signup.html',\r\n\t\t\t\tcontroller:SignUpController,\r\n\t\t\t\tcontrollerAs:'ctrl',\r\n\t\t\t\tbindToController:this\r\n\t\t\t});\r\n\t\t}\r\n\t\tsignupConfig.$inject=['$stateProvider'];\r\n\t\tfunction SignUpController($state,UsersService){\r\n\t\t\tvar vm=this\r\n\t\t\tvm.user={};\r\n\t\t\tvm.message=\"Sign up for an account!\";\r\n\t\t\tvm.submit=function(){\r\n\t\t\t\tconsole.log(vm.user);\r\n\t\t\t\tUsersService.create(vm.user).then(function(res){\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t$state.go('define');\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\t\tSignUpController.$inject=['$state','UsersService'];\r\n})();","","(()=>{\r\n\tangular.module('workoutlog')\r\n\t\t.factory('AuthInterceptor',['SessionToken','API_BASE',\r\n\t\t\tfunction(SessionToken,API_BASE){\r\n\t\t\t\treturn {\r\n\t\t\t\t\trequest:function(config){\r\n\t\t\t\t\t\tvar token=SessionToken.get();\r\n\t\t\t\t\t\tif(token&&config.url.indexOf(API_BASE)>-1){\r\n\t\t\t\t\t\t\tconfig.headers['Authorization']=token;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn config\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t]);\r\n\tangular.module('workoutlog')\r\n\t\t.config(['$httpProvider',function($httpProvider){\r\n\t\t\treturn $httpProvider.interceptors.push('AuthInterceptor')\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('workoutlog')\r\n\t\t.service('CurrentUser',['$window',function($window){\r\n\t\t\tfunction CurrentUser(){\r\n\t\t\t\tvar cu=$window.localStorage.getItem('currentUser');\r\n\t\t\t\tif(cu&&cu!=='undefined')this.cu=JSON.parse($window.localStorage.getItem('currentUser'));\r\n\t\t\t}\r\n\t\t\tCurrentUser.prototype.set = function(user) {\r\n\t\t\t\tthis.cu=user;\r\n\t\t\t\t$window.localStorage.setItem('currentUser',JSON.stringify(user));\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.get = function() {\r\n\t\t\t\treturn this.cu||{};\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.clear = function() {\r\n\t\t\t\tthis.cu=undefined;\r\n\t\t\t\t$window.localStorage.removeItem('currentUser');\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.isSignedIn = function() {\r\n\t\t\t\treturn !!this.get().id;\r\n\t\t\t};\r\n\t\t\treturn new CurrentUser();\r\n\t\t}]);\r\n})();","(()=>{\r\n\tangular\r\n\t\t.module('workoutlog')\r\n\t\t.service('DefineService',DefineService);\r\n\t\tDefineService.$inject=['$http','API_BASE'];\r\n\t\tfunction DefineService(http,API_BASE){\r\n\t\t\tvar ds=this;\r\n\t\t\tds.userDefinitions=[];\r\n\t\t\tds.save=function(definition){\r\n\t\t\t\treturn http.post(API_BASE+'definition',{\r\n\t\t\t\t\tdefinition:definition\r\n\t\t\t\t}).then(res=>ds.userDefinitions.unshift(res.data));\r\n\t\t\t};\r\n\t\t\tds.fetch=definition=>{\r\n\t\t\t\treturn http.get(API_BASE+'definition').then(res=>{ds.userDefinitions=res.data;});\r\n\t\t\t}\r\n\t\t\tds.getDefinitions=()=>ds.userDefinitions;\r\n\t\t}\r\n})();","(()=>{\r\n\tangular.module('workoutlog')\r\n\t\t.service('LogsService',LogsService);\r\n\tLogsService.$inject=['$http','API_BASE']\r\n\tfunction LogsService($http,API_BASE,DefineService) {\r\n\t\tvar logsService=this;\r\n\t\tlogsService.workouts=[];\r\n\t\tlogsService.individualLog={};\r\n\r\n\t\tlogsService.save=log=>$http.post(API_BASE+'log',{log:log}).then(data=>logsService.workouts.push(data));\r\n\t\tlogsService.getLogs=()=>$http.get(API_BASE+'log').then(res=>logsService.workouts=res.data);\r\n\t\tlogsService.deleteLogs=log=>{\r\n\t\t\tvar logIndex=logsService.workouts.indexOf(log);\r\n\t\t\tlogsService.workouts.splice(logIndex,1);\r\n\t\t\tvar deleteData={log:log};\r\n\t\t\treturn $http({\r\n\t\t\t\tmethod:'DELETE',\r\n\t\t\t\turl:API_BASE+\"log\",\r\n\t\t\t\tdata:JSON.stringify(deleteData),\r\n\t\t\t\theaders:{\"Content-Type\":\"application/json\"}\r\n\t\t\t});\r\n\t\t};\r\n\t\tlogsService.fetchOne=log=>$http.get(API_BASE+'log/'+log).then(res=>logsService.individualLog=res.data);\r\n\t\tlogsService.getLog=()=>logsService.individualLog;\r\n\t\tlogsService.updateLog=logToUpdate=>$http.put(API_BASE+'log',{log:logToUpdate});\r\n\t}\r\n})();","(function(){\r\n\tangular.module('workoutlog')\r\n\t\t.service('SessionToken',['$window',function($window){\r\n\t\t\tfunction SessionToken(){\r\n\t\t\t\tthis.sessionToken=$window.localStorage.getItem('sessionToken');\r\n\t\t\t}\r\n\t\t\tSessionToken.prototype.set = function(token) {\r\n\t\t\t\tthis.sessionToken=token;\r\n\t\t\t\t$window.localStorage.setItem('sessionToken',token);\r\n\t\t\t};\r\n\t\t\tSessionToken.prototype.get = function() {\r\n\t\t\t\treturn this.sessionToken;\r\n\t\t\t};\r\n\t\t\tSessionToken.prototype.clear = function() {\r\n\t\t\t\tthis.sessionToken=undefined;\r\n\t\t\t\t$window.localStorage.removeItem('sessionToken');\r\n\t\t\t};\r\n\t\t\treturn new SessionToken();\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('workoutlog')\r\n\t\t.service('UsersService',[\r\n\t\t\t'$http','API_BASE','SessionToken','CurrentUser',\r\n\t\t\tfunction($http,API_BASE,SessionToken,CurrentUser){\r\n\t\t\t\tfunction UsersService(){\r\n\r\n\t\t\t\t}\r\n\t\t\t\tUsersService.prototype.create = function(user) {\r\n\t\t\t\t\tvar userPromise=$http.post(API_BASE+'user',{\r\n\t\t\t\t\t\tuser:user\r\n\t\t\t\t\t});\r\n\t\t\t\t\tuserPromise.then(function(res){\r\n\t\t\t\t\t\tSessionToken.set(res.data.sessionToken);\r\n\t\t\t\t\t\tCurrentUser.set(res.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn userPromise;\r\n\t\t\t\t};\r\n\t\t\t\tUsersService.prototype.login = function(user) {\r\n\t\t\t\t\tvar loginPromise=$http.post(API_BASE+'login',{\r\n\t\t\t\t\t\tuser:user\r\n\t\t\t\t\t});\r\n\t\t\t\t\tloginPromise.then(function(res){\r\n\t\t\t\t\t\tSessionToken.set(res.data.sessionToken);\r\n\t\t\t\t\t\tCurrentUser.set(res.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn loginPromise;\r\n\t\t\t\t};\r\n\t\t\t\treturn new UsersService();\r\n\t\t\t}\r\n\t\t]);\r\n})();"]}